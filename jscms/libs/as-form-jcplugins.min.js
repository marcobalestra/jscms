AS.form.fields.jcpage=class extends AS.form.field{static buildValue(to,v){return to.prop.chosenValue=String(to.field.options[to.field.selectedIndex].value),AS.form.field.prototype.buildValue.call(to,to.prop.chosenValue)}static renderField(to){AS.test.obj(to.prop.value)&&(to.prop.value.page,to.prop.value.id);return to.field=document.createElement("select"),to.field.className="asFormField asFormFieldJcpage",to.field.setAttribute("id",to.prop.id),to.field.setAttribute("name",to.prop.name),to.field.setAttribute("placeholder",to.prop.placeholder),to.field.setAttribute("style","width:100%;"),to.field.asField=()=>to,AS.form.field.prototype.renderField.call(to)}static postRender(to){const $d=$(to.field).closest("div");$d.css({padding:".5em 1em 1em 1em"});const cv=!!AS.test.obj(to.prop.value)&&to.prop.value.page+(to.prop.value.id||"");let args=[];return AS.test.str(to.prop.pageType)&&args.push(to.prop.pageType),args.push(data=>{let $f=$(to.field);$f.append("<option></option>");let curpage=jc.page.current(),curid=String(jc.page.data().id||"");Object.keys(data).forEach(page=>{let ptype=data[page];Object.keys(ptype).forEach(id=>{let p=ptype[id];var v;id=parseInt(id)?id:"",!to.prop.includecurrent&&page==curpage&&id==curid||(v=page+id,$f.append(`<option value="${v}" title="${p.title.escape()}">[${page}${id}] ${p.title.escape()} â€” ${(p.desc||"").escape()}</option>`))})}),cv&&$f.val(cv),to.prop._s2v&&$f.val(to.prop._s2v),$f.select2({dropdownParent:$(to.getForm().fakeForm()).closest(".modal"),placeholder:AS.label("Select")}),$f.on("change",e=>{to.setValue(to.getJsValue()),AS.form.field.onchange(to),AS.test.func(to.prop.jconchange)&&window.setTimeout(()=>{to.prop.jconchange.call(window,to,$f)},10)}),$f.addClass("jcParsed")}),jc.lists.list.get.apply(window,args),AS.form.field.postRender.call(window,to)}getJsValue(){let v=this.field.options[this.field.selectedIndex].value;if(AS.test.obj(v))return v;if(AS.test.str(v)&&""!=v){let o={page:v.replace(/[0-9]+$/,"")};return v.match(/[0-9]+$/)&&(o.id=parseInt(v.replace(/^.*[^0-9]([0-9]+)$/,"$1"))),o}}parse(v){let av=v[this.prop.name];if(av){let avs=av.page+(av.id||"");this.prop._s2v=avs;let $s=$(this.fakeField());const sv=()=>{if(!$s.hasClass("jcParsed"))return setTimeout(sv,100);this.setValue(av),$s.val(avs).trigger("change")};sv()}this.hideWarning()}renderField(){return AS.form.fields.jcpage.renderField.call(window,this)}postRender(){return AS.form.fields.jcpage.postRender.call(window,this)}},AS.form.fields.select2=class extends AS.form.fields.select{static postRender(to){const $f=$(to.field),$d=$f.closest("div");$d.css({padding:"0 1em 1em 1em"}),$f.addClass("asFormFieldSelect2").css("width","100%"),to.prop.multiple&&$f.attr("multiple",!0);var s2={dropdownParent:$(to.getForm().fakeForm()).closest(".modal"),placeholder:AS.label("Select")};return AS.test.obj(to.prop.select2)&&$.extend(s2,to.prop.select2),$f.select2(s2),$f.on("change",e=>{to.setValue(),AS.test.func(to.prop.jconchange)&&window.setTimeout(()=>{to.prop.jconchange.call(window,to,$f)},10)}),$f.addClass("jcParsed"),AS.test.func(to.prop.jconrender)&&window.setTimeout(()=>{to.prop.jconrender.call(window,to,$f)},10),AS.form.field.postRender.call(window,to)}parse(v){let av=v[this.prop.name];if(AS.test.def(av)){const $s=$(this.fakeField()),sv=()=>{if(!$s.hasClass("jcParsed"))return setTimeout(sv,100);this.prop.select2&&this.prop.select2.tags&&!$('option[value="'+av+'"]').length&&$(this.field).append(`<option value="${av}">${av}</option>`).trigger("change"),this.setValue(av),$s.val(av).trigger("change")};sv()}this.hideWarning()}buildValue(){return this.field.value}buildValueString(){return this.field.value}getValue(){return this.field.value}postRender(){return AS.form.fields.select2.postRender.call(window,this)}};