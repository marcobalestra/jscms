{"metadata":{"type":"blog","id":1,"title":"Once upon a time…","keywords":"jscms, jbloud","description":"From the beginning to JSCMS, then to JBLOUD - Thanks to some god for IE is dead"},"title":"Once upon a time…","abstract":"From the beginning to JSCMS, then to JBLOUD - <i>Thanks to some god for IE’s dead!</i>","id":1,"blocks":[{"type":"html","html":"<h4>Kickstart</h4>\n<p>The <a href=\"https://github.com/marcobalestra/jscms\" target=\"_blank\" rel=\"noopener\">repository on GitHub</a> started 23 days ago, on May 4th 2021, and actually the CMS development started only some days before.</p>\n<p>Initially the idea was to have:</p>\n<ul>\n<li>most of the work done in the browser as a single-page application</li>\n<li>a light server-side effort with just a few JSON actions (as opposite as trendy PHP CMSs)</li>\n<li>data on JSON files, relationships data in a DB</li>\n<li>the actual page built by a javascript rendering process, based on template/data</li>\n</ul>\n<p>So I started designing the renderer, splitting the process in several steps:</p>\n<ol>\n<li>preload in the first page all libraries (including Bootstrap)</li>\n<li>load a javascript descriptor (info file)</li>\n<li>load and apply its HTML &ldquo;cage&rdquo;</li>\n<li>load page data</li>\n<li>render data in &ldquo;cage&rdquo; areas depending on &ldquo;info&rdquo; definition.</li>\n</ol>\n<p>&hellip;and it worked, and it was very very fast.</p>"},{"type":"html","html":"<h4>A back-end</h4>\n<p>It was time to decide the backend, and I wasn&rsquo;t sure about the backend architecture.<br /><strong>A premise</strong>: don&rsquo;t think that&nbsp;<em>trendy</em>&nbsp;or&nbsp;<em>popular</em>&nbsp;necessarily means&nbsp;<em>better</em>. Look at Windows&hellip;</p>\n<p>Of course I didn&rsquo;t consider anything from M$, I wanted a working tool running on a real operating system.</p>\n<p>The first decision was to exclude Python: too heavy, too slow, sentenced by its rigid philosophy (only one way to do it, then always the most complete and huge library has to be loaded - even for a silly elementary action).</p>\n<p>I didn&rsquo;t want to use Java for similar reasons: a minimal server-side effort works better if supported by small light processes that are triggered then die &ndash; e.g.: a CGI approach.</p>\n<p>The field was restricted to two candidates, both in CGI: Symfony/PHP and Perl.<br />In my experience a Perl environment is much more affordable and performant than the trendy alternatives.<br />On the other hand Symfony/PHP is so trendy, in addition I wonder because people are not scared if they have to install&nbsp;<span style=\"text-decoration: underline;\">plenty</span>&nbsp;of ridiculous dependencies (most of them required to fake efficiency by caching the whatever).<br />But hey&hellip; It&rsquo;s so popular!</p>\n<p>I started developing the backend in Symfony, and I learned that creating a project from scratch without a commercial editor like PHPStorm is a nightmare.<br />I asked PHPStorm for a free license for opensource, and I got ignored (they never answered, simply).<br />Using cr*k&rsquo;d tools for an opensource makes no sense, I was prone to kiss goodbye to Symfony.</p>"},{"type":"html","html":"<h4>A back-end?</h4>\n<p>I showed the progresses to a friend, <a href=\"https://www.joram.it/\" target=\"_blank\" rel=\"noopener\">Joram</a>.<br />I wanted to show how fast is the rendering of the data, and I started drafting JSON editor for basic data fields (text, html).<br />He simply said:&nbsp;<em>&ldquo;It&rsquo;s a pity that you can&rsquo;t simply do the work in javascript, it would be so cool if you don&rsquo;t need server-side action&rdquo;</em>.</p>\n<p>And&nbsp;<em>bang</em>, the simple idea was on the table.<br />Being an old (or let&rsquo;s say&nbsp;<em>mature</em>) programmer, I tend to stick on some axles and at the same time I&rsquo;m always ready to question everything, including fundamentals.<br />So the question became:<em>&nbsp;&ldquo;Do I really need server-side effort if I can use PUT method and such?&rdquo;</em></p>\n<p>It&rsquo;s not exactly the most popular topic you can google around, on the other hand Ecmascript6 was out and I was hellbent to exploit it.<br />And I succeeded, and also found a way to do the same using jQuery (already included because of Bootstrap), more handy.<br />Then the challenge became to upload <em>binary</em> file(s) from an input field, to do it without using deprecated methods, then to upload arbitrary Blob(s). Achieved.</p>\n<p>Moving ahead, every step I repeated myself:&nbsp;<em>&laquo;Thanks to some god for IE&rsquo;s dead!&raquo;<br /></em>It has been more harmful than a Cersei Lannister.</p>"},{"type":"html","html":"<h4>The rabbit is out of the hat</h4>\n<p>Ok, then it was possible to upload and delete both UTF-8 JSON and binary files using simply javascript and WebDAV, without a back-end. Cool!</p>\n<p>A first support came from another library I wrote in a recent past: <a href=\"https://altersoftware.it/products/jslibs/js-as-form/\" target=\"_blank\" rel=\"noopener\"><em><strong>js-as-form</strong></em></a>, a vanilla javascript object-oriented library to build and manage complex and hierarchical forms returning also a JSON value. It&rsquo;s also extensible by adding with plugins more field types, and saved a lot of time.<br />By using it I was also using <a href=\"https://altersoftware.it/products/jslibs/js-as-labels/\" target=\"_blank\" rel=\"noopener\"><em><strong>js-as-labels</strong></em></a>, included, and it&rsquo;s easy enough with it to localise the UI.</p>\n<p>What about relationships?<br />I think of article lists, last changed lists, category lists&hellip;<br />Obvious: JSON files built and uploaded on page save.</p>\n<p>Rossella, another friend, told me: <em>&ldquo;Today people want to speak rather than write&rdquo;</em>.<br />Ok, then I need a voice recording tool - and possibly a video recording tool. Is it possible?<br />It is, with some limitations. As of today:</p>\n<ul>\n<li>audio/video recording doesn&rsquo;t work on Safari Desktop v.14.1</li>\n<li>video recording in Chrome spots an audio lag (out of sync with video)</li>\n<li>mobile Safari (iOS) works better that any alternative, but can&rsquo;t pause.<br />It produces .mp4 audio and video files that can be played everywhere (even if they&rsquo;re some bigger).</li>\n<li>Firefox and Chrome only record .webm files, that won&rsquo;t play on Safari and iOS devices</li>\n</ul>\n<p>Several limitations, but hopefully they&rsquo;ll disappear as soon as the W3 specifications are adopted.<br />Yet now rumours are that the <em>MediaRecorder</em> support will be shipped with Safari v.14.3 (now in beta), and there are open tickets in Chromium for the audio/video sync.<br />The decision then was to stick on W3 specifications, full stop.</p>\n<p>In any case there is always the option to prepare an audio or video file and then upload it.</p>"},{"type":"html","html":"<h4>A name</h4>\n<p>The draft name was &ldquo;jscms&rdquo;, because hey, it <em><strong>is</strong></em> a js cms!</p>\n<p>It was quite easy to discover that such name was widely used yet, even if all the existing alternatives required some serverside effort (in javascript with node.js, the <em>evil</em>) or user effort (e.g. uploading content in FTP).</p>\n<p>It started the research for an appropriate name: clean, short, with .com domain available.<br />Another friend, David, was involved in this process &mdash; and he&rsquo;s still involved, his graphic and visual skills are awesome.</p>\n<p>The decision was for JBLOUD: <strong>J</strong>avascript + <strong>B</strong>log + <strong>Loud</strong></p>"},{"type":"html","html":"<h4>Next steps</h4>\n<p>As of today, my idea it to perform these steps:</p>\n<ol>\n<li>Sharing tool should work like menu (data in JSON, rendering in repository)</li>\n<li>A&nbsp;<em>blogindex</em>&nbsp;page presenting blog articles as per its parameters</li>\n<li>A <em>community edition</em>, where first-level directory is the blog name then the rest of the URI is local.</li>\n<li>Eventually some management backend: not for the CMS, but to manage CMS instances for the community edition.</li>\n</ol>"}],"blogdate":"2021-05-26"}